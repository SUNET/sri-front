# source: http://ni.localenv.loc/graphql/
# timestamp: Thu Feb 27 2020 13:57:16 GMT+0100 (GMT+01:00)

"""Phone entity to be used inside contact"""
type Address implements Node & Logical {
  handle_id: ID!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  phone: String
  street: String
  postal_code: String
  postal_area: String
}

type AddressConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [AddressEdge]!
}

"""A Relay edge containing a `Address` and its cursor."""
type AddressEdge {
  """The item at the end of the edge"""
  node: Address

  """A cursor for use in pagination"""
  cursor: String!
}

input AddressFilter {
  AND: [AddressNestedFilter!]
  OR: [AddressNestedFilter!]
}

input AddressInputField {
  name: String
  phone: String
  street: String
  postal_code: String
  postal_area: String
  id: ID
  created: DateTime
  modified: DateTime
  creator: UserInputType
  modifier: UserInputType
}

input AddressNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  phone: String
  phone_not: String
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_in: [String!]
  phone_not_in: [String!]
  street: String
  street_not: String
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  street_in: [String!]
  street_not_in: [String!]
  postal_code: String
  postal_code_not: String
  postal_code_lt: String
  postal_code_lte: String
  postal_code_gt: String
  postal_code_gte: String
  postal_code_contains: String
  postal_code_not_contains: String
  postal_code_starts_with: String
  postal_code_not_starts_with: String
  postal_code_ends_with: String
  postal_code_not_ends_with: String
  postal_code_in: [String!]
  postal_code_not_in: [String!]
  postal_area: String
  postal_area_not: String
  postal_area_lt: String
  postal_area_lte: String
  postal_area_gt: String
  postal_area_gte: String
  postal_area_contains: String
  postal_area_not_contains: String
  postal_area_starts_with: String
  postal_area_not_starts_with: String
  postal_area_ends_with: String
  postal_area_not_ends_with: String
  postal_area_in: [String!]
  postal_area_not_in: [String!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum AddressOrderBy {
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  street_ASC
  street_DESC
  postal_code_ASC
  postal_code_DESC
  postal_area_ASC
  postal_area_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

type Cable implements Node & Physical {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  cable_type: ChoiceScalar
  description: String
  ports: [Port]
}

"""This class is used for the choices available in a dropdown"""
type Choice implements KeyValue {
  id: ID!
  dropdown: Dropdown!
  name: String!
  value: String!
}

"""This scalar represents a choice field in query/mutation"""
scalar ChoiceScalar

"""
This type represents a comment in the API, it uses the comments model just
like the rest of noclook
"""
type CommentType implements Node {
  """The ID of the object."""
  id: ID!
  object_pk: String!
  user: User
  user_name: String!
  user_email: String!
  user_url: String!
  comment: String!
  submit_date: DateTime!
  ip_address: String

  """
  Uncheck this box to make the comment effectively disappear from the site.
  """
  is_public: Boolean!

  """
  Check this box if the comment is inappropriate. A "This comment has been removed" message will be displayed instead.
  """
  is_removed: Boolean!
  object_id: ID!
}

input CompositeContactMutationInput {
  create_input: CreateContactInput
  update_input: UpdateContactInput
  create_subinputs: [CreateEmailInput]
  update_subinputs: [UpdateEmailInput]
  delete_subinputs: [DeleteEmailInput]
  unlink_subinputs: [DeleteRelationshipInput]
  create_phones: [CreatePhoneInput]
  update_phones: [UpdatePhoneInput]
  delete_phones: [DeletePhoneInput]
  link_rolerelations: [RoleRelationMutationInput]
  clientMutationId: String
}

type CompositeContactMutationPayload {
  created: CreateContactPayload
  updated: UpdateContactPayload
  subcreated: [CreateEmailPayload]
  subupdated: [UpdateEmailPayload]
  subdeleted: [DeleteEmailPayload]
  unlinked: [DeleteRelationshipPayload]
  phones_created: [CreatePhonePayload]
  phones_updated: [UpdatePhonePayload]
  phones_deleted: [DeletePhonePayload]
  rolerelations: [RoleRelationMutationPayload]
  clientMutationId: String
}

input CompositeGroupMutationInput {
  create_input: CreateGroupInput
  update_input: UpdateGroupInput
  create_subinputs: [CreateContactInput]
  update_subinputs: [UpdateContactInput]
  delete_subinputs: [DeleteContactInput]
  unlink_subinputs: [DeleteRelationshipInput]
  clientMutationId: String
}

type CompositeGroupMutationPayload {
  created: CreateGroupPayload
  updated: UpdateGroupPayload
  subcreated: [CreateContactPayload]
  subupdated: [UpdateContactPayload]
  subdeleted: [DeleteContactPayload]
  unlinked: [DeleteRelationshipPayload]
  clientMutationId: String
}

input CompositeOrganizationMutationInput {
  create_input: CreateOrganizationInput
  update_input: UpdateOrganizationInput
  create_subinputs: [CreateContactInput]
  update_subinputs: [UpdateContactInput]
  delete_subinputs: [DeleteContactInput]
  unlink_subinputs: [DeleteRelationshipInput]
  create_address: [CreateAddressInput]
  update_address: [UpdateAddressInput]
  delete_address: [DeleteAddressInput]
  clientMutationId: String
}

type CompositeOrganizationMutationPayload {
  created: CreateOrganizationPayload
  updated: UpdateOrganizationPayload
  subcreated: [CreateContactPayload]
  subupdated: [UpdateContactPayload]
  subdeleted: [DeleteContactPayload]
  unlinked: [DeleteRelationshipPayload]
  address_created: [CreateAddressPayload]
  address_updated: [UpdateAddressPayload]
  address_deleted: [DeleteAddressPayload]
  clientMutationId: String
}

"""A contact in the SRI system"""
type Contact implements Node & Relation {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  with_same_name: [Relation]
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  first_name: String!
  last_name: String!
  title: String
  salutation: String
  contact_type: ChoiceScalar
  phones: [Phone]
  phones_relations: [IDRelation]
  emails: [Email]
  emails_relations: [IDRelation]
  pgp_fingerprint: String
  member_of_groups: [Group]
  roles: [RoleRelation]
  organizations: [Organization]
  organizations_relations: [IDRelation]
  notes: String
}

type ContactConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ContactEdge]!
}

"""A Relay edge containing a `Contact` and its cursor."""
type ContactEdge {
  """The item at the end of the edge"""
  node: Contact

  """A cursor for use in pagination"""
  cursor: String!
}

input ContactFilter {
  AND: [ContactNestedFilter!]
  OR: [ContactNestedFilter!]
}

input ContactNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  first_name: String
  first_name_not: String
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  last_name: String
  last_name_not: String
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  title: String
  title_not: String
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_in: [String!]
  title_not_in: [String!]
  salutation: String
  salutation_not: String
  salutation_lt: String
  salutation_lte: String
  salutation_gt: String
  salutation_gte: String
  salutation_contains: String
  salutation_not_contains: String
  salutation_starts_with: String
  salutation_not_starts_with: String
  salutation_ends_with: String
  salutation_not_ends_with: String
  salutation_in: [String!]
  salutation_not_in: [String!]
  contact_type: ChoiceScalar
  contact_type_not: ChoiceScalar
  contact_type_lt: ChoiceScalar
  contact_type_lte: ChoiceScalar
  contact_type_gt: ChoiceScalar
  contact_type_gte: ChoiceScalar
  contact_type_contains: ChoiceScalar
  contact_type_not_contains: ChoiceScalar
  contact_type_starts_with: ChoiceScalar
  contact_type_not_starts_with: ChoiceScalar
  contact_type_ends_with: ChoiceScalar
  contact_type_not_ends_with: ChoiceScalar
  contact_type_in: [ChoiceScalar!]
  contact_type_not_in: [ChoiceScalar!]
  phones: PhoneInputField
  phones_not: PhoneInputField
  phones_lt: PhoneInputField
  phones_lte: PhoneInputField
  phones_gt: PhoneInputField
  phones_gte: PhoneInputField
  phones_contains: PhoneInputField
  phones_not_contains: PhoneInputField
  phones_starts_with: PhoneInputField
  phones_not_starts_with: PhoneInputField
  phones_ends_with: PhoneInputField
  phones_not_ends_with: PhoneInputField
  phones_in: [PhoneInputField!]
  phones_not_in: [PhoneInputField!]
  emails: EmailInputField
  emails_not: EmailInputField
  emails_lt: EmailInputField
  emails_lte: EmailInputField
  emails_gt: EmailInputField
  emails_gte: EmailInputField
  emails_contains: EmailInputField
  emails_not_contains: EmailInputField
  emails_starts_with: EmailInputField
  emails_not_starts_with: EmailInputField
  emails_ends_with: EmailInputField
  emails_not_ends_with: EmailInputField
  emails_in: [EmailInputField!]
  emails_not_in: [EmailInputField!]
  pgp_fingerprint: String
  pgp_fingerprint_not: String
  pgp_fingerprint_lt: String
  pgp_fingerprint_lte: String
  pgp_fingerprint_gt: String
  pgp_fingerprint_gte: String
  pgp_fingerprint_contains: String
  pgp_fingerprint_not_contains: String
  pgp_fingerprint_starts_with: String
  pgp_fingerprint_not_starts_with: String
  pgp_fingerprint_ends_with: String
  pgp_fingerprint_not_ends_with: String
  pgp_fingerprint_in: [String!]
  pgp_fingerprint_not_in: [String!]
  member_of_groups: GroupInputField
  member_of_groups_not: GroupInputField
  member_of_groups_lt: GroupInputField
  member_of_groups_lte: GroupInputField
  member_of_groups_gt: GroupInputField
  member_of_groups_gte: GroupInputField
  member_of_groups_contains: GroupInputField
  member_of_groups_not_contains: GroupInputField
  member_of_groups_starts_with: GroupInputField
  member_of_groups_not_starts_with: GroupInputField
  member_of_groups_ends_with: GroupInputField
  member_of_groups_not_ends_with: GroupInputField
  member_of_groups_in: [GroupInputField!]
  member_of_groups_not_in: [GroupInputField!]
  roles: RoleRelationInputField
  roles_not: RoleRelationInputField
  roles_lt: RoleRelationInputField
  roles_lte: RoleRelationInputField
  roles_gt: RoleRelationInputField
  roles_gte: RoleRelationInputField
  roles_contains: RoleRelationInputField
  roles_not_contains: RoleRelationInputField
  roles_starts_with: RoleRelationInputField
  roles_not_starts_with: RoleRelationInputField
  roles_ends_with: RoleRelationInputField
  roles_not_ends_with: RoleRelationInputField
  roles_in: [RoleRelationInputField!]
  roles_not_in: [RoleRelationInputField!]
  organizations: OrganizationInputField
  organizations_not: OrganizationInputField
  organizations_lt: OrganizationInputField
  organizations_lte: OrganizationInputField
  organizations_gt: OrganizationInputField
  organizations_gte: OrganizationInputField
  organizations_contains: OrganizationInputField
  organizations_not_contains: OrganizationInputField
  organizations_starts_with: OrganizationInputField
  organizations_not_starts_with: OrganizationInputField
  organizations_ends_with: OrganizationInputField
  organizations_not_ends_with: OrganizationInputField
  organizations_in: [OrganizationInputField!]
  organizations_not_in: [OrganizationInputField!]
  notes: String
  notes_not: String
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  notes_in: [String!]
  notes_not_in: [String!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum ContactOrderBy {
  name_ASC
  name_DESC
  first_name_ASC
  first_name_DESC
  last_name_ASC
  last_name_DESC
  title_ASC
  title_DESC
  salutation_ASC
  salutation_DESC
  contact_type_ASC
  contact_type_DESC
  phones_ASC
  phones_DESC
  emails_ASC
  emails_DESC
  pgp_fingerprint_ASC
  pgp_fingerprint_DESC
  member_of_groups_ASC
  member_of_groups_DESC
  roles_ASC
  roles_DESC
  organizations_ASC
  organizations_DESC
  notes_ASC
  notes_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

input CreateAddressInput {
  organization: ChoiceScalar
  name: String!
  phone: String
  street: String
  postal_code: String
  postal_area: String
  clientMutationId: String
}

type CreateAddressPayload {
  errors: [ErrorType]
  address: Address
  clientMutationId: String
}

input CreateCommentInput {
  object_id: ID!
  comment: String!
  clientMutationId: String
}

type CreateCommentPayload {
  comment: CommentType
  clientMutationId: String
}

input CreateContactInput {
  first_name: String!
  last_name: String!
  contact_type: ChoiceScalar!
  name: String
  title: String
  pgp_fingerprint: String
  notes: String
  relationship_works_for: ChoiceScalar
  relationship_member_of: ChoiceScalar
  role: ChoiceScalar
  email_id: String
  email: String
  email_type: ChoiceScalar
  phone_id: String
  phone: String
  phone_type: ChoiceScalar
  role_id: String
  clientMutationId: String
}

type CreateContactPayload {
  errors: [ErrorType]
  contact: Contact
  clientMutationId: String
}

input CreateEmailInput {
  contact: ChoiceScalar
  name: String!
  type: ChoiceScalar!
  clientMutationId: String
}

type CreateEmailPayload {
  errors: [ErrorType]
  email: Email
  clientMutationId: String
}

input CreateGroupInput {
  name: String!
  description: String
  clientMutationId: String
}

type CreateGroupPayload {
  errors: [ErrorType]
  group: Group
  clientMutationId: String
}

input CreateOptionForDropdownInput {
  dropdown_name: String!
  name: String!
  value: String!
  clientMutationId: String
}

type CreateOptionForDropdownPayload {
  choice: Choice
  clientMutationId: String
}

input CreateOrganizationInput {
  organization_number: String
  name: String!
  description: String
  website: String
  organization_id: String
  type: ChoiceScalar
  incident_management_info: String
  affiliation_customer: Boolean
  affiliation_end_customer: Boolean
  affiliation_provider: Boolean
  affiliation_partner: Boolean
  affiliation_host_user: Boolean
  affiliation_site_owner: Boolean
  relationship_parent_of: ChoiceScalar
  relationship_uses_a: ChoiceScalar
  abuse_contact: ChoiceScalar
  primary_contact: ChoiceScalar
  secondary_contact: ChoiceScalar
  it_technical_contact: ChoiceScalar
  it_security_contact: ChoiceScalar
  it_manager_contact: ChoiceScalar
  clientMutationId: String
}

type CreateOrganizationPayload {
  errors: [ErrorType]
  organization: Organization
  clientMutationId: String
}

input CreatePhoneInput {
  contact: ChoiceScalar
  name: String!
  type: ChoiceScalar!
  clientMutationId: String
}

type CreatePhonePayload {
  errors: [ErrorType]
  phone: Phone
  clientMutationId: String
}

input CreateProcedureInput {
  name: String!
  description: String
  clientMutationId: String
}

type CreateProcedurePayload {
  errors: [ErrorType]
  procedure: Procedure
  clientMutationId: String
}

input CreateRoleInput {
  name: String!
  description: String
  id: ID
  clientMutationId: String
}

type CreateRolePayload {
  role: Role
  errors: [ErrorType]
  clientMutationId: String
}

type Customer implements Node & Relation {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  with_same_name: [Relation]
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  url: String
  description: String
}

type CustomerConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [CustomerEdge]!
}

"""A Relay edge containing a `Customer` and its cursor."""
type CustomerEdge {
  """The item at the end of the edge"""
  node: Customer

  """A cursor for use in pagination"""
  cursor: String!
}

input CustomerFilter {
  AND: [CustomerNestedFilter!]
  OR: [CustomerNestedFilter!]
}

input CustomerNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  url: String
  url_not: String
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  url_in: [String!]
  url_not_in: [String!]
  description: String
  description_not: String
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_in: [String!]
  description_not_in: [String!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum CustomerOrderBy {
  name_ASC
  name_DESC
  url_ASC
  url_DESC
  description_ASC
  description_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input DeleteAddressInput {
  id: ID!
  clientMutationId: String
}

type DeleteAddressPayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeleteCommentInput {
  id: ID!
  clientMutationId: String
}

type DeleteCommentPayload {
  success: Boolean!
  id: ID!
  clientMutationId: String
}

input DeleteContactInput {
  id: ID!
  clientMutationId: String
}

type DeleteContactPayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeleteEmailInput {
  id: ID!
  clientMutationId: String
}

type DeleteEmailPayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeleteGroupInput {
  id: ID!
  clientMutationId: String
}

type DeleteGroupPayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeleteOrganizationInput {
  id: ID!
  clientMutationId: String
}

type DeleteOrganizationPayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeletePhoneInput {
  id: ID!
  clientMutationId: String
}

type DeletePhonePayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeleteProcedureInput {
  id: ID!
  clientMutationId: String
}

type DeleteProcedurePayload {
  errors: [ErrorType]
  success: Boolean!
  clientMutationId: String
}

input DeleteRelationshipInput {
  relation_id: Int!
  clientMutationId: String
}

type DeleteRelationshipPayload {
  success: Boolean!
  relation_id: Int!
  clientMutationId: String
}

input DeleteRoleInput {
  id: ID!
  clientMutationId: String
}

type DeleteRolePayload {
  success: Boolean!
  id: ID!
  clientMutationId: String
}

"""
This type represents an key value pair in a dictionary for the data
dict of the norduniclient nodes
"""
type DictEntryType implements KeyValue {
  name: String!
  value: String!
}

"""
This type represents an key value pair for a relationship dictionary,
the key is the name of the relationship and the value the NIRelationType itself
"""
type DictRelationType {
  name: String!
  relation: NIRelationType!
}

"""This class represents a dropdown to use in forms"""
type Dropdown {
  id: ID!
  name: String!
}

"""Email entity to be used inside contact"""
type Email implements Node & Logical {
  handle_id: ID!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  type: ChoiceScalar!
}

type EmailConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [EmailEdge]!
}

"""A Relay edge containing a `Email` and its cursor."""
type EmailEdge {
  """The item at the end of the edge"""
  node: Email

  """A cursor for use in pagination"""
  cursor: String!
}

input EmailFilter {
  AND: [EmailNestedFilter!]
  OR: [EmailNestedFilter!]
}

input EmailInputField {
  name: String
  type: ChoiceScalar
  id: ID
  created: DateTime
  modified: DateTime
  creator: UserInputType
  modifier: UserInputType
}

input EmailNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  type: ChoiceScalar
  type_not: ChoiceScalar
  type_lt: ChoiceScalar
  type_lte: ChoiceScalar
  type_gt: ChoiceScalar
  type_gte: ChoiceScalar
  type_contains: ChoiceScalar
  type_not_contains: ChoiceScalar
  type_starts_with: ChoiceScalar
  type_not_starts_with: ChoiceScalar
  type_ends_with: ChoiceScalar
  type_not_ends_with: ChoiceScalar
  type_in: [ChoiceScalar!]
  type_not_in: [ChoiceScalar!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum EmailOrderBy {
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

type ErrorType {
  field: String!
  messages: [String!]!
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

"""The group type is used to group contacts"""
type Group implements Node & Logical {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  description: String
  contacts: [Contact]
  contact_relations: [IDRelation]
}

type GroupConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [GroupEdge]!
}

"""A Relay edge containing a `Group` and its cursor."""
type GroupEdge {
  """The item at the end of the edge"""
  node: Group

  """A cursor for use in pagination"""
  cursor: String!
}

input GroupFilter {
  AND: [GroupNestedFilter!]
  OR: [GroupNestedFilter!]
}

input GroupInputField {
  name: String
  description: String
  id: ID
  created: DateTime
  modified: DateTime
  creator: UserInputType
  modifier: UserInputType
}

input GroupNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  description: String
  description_not: String
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_in: [String!]
  description_not_in: [String!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum GroupOrderBy {
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

"""A host in the SRI system"""
type Host implements Node & Logical {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  ip_addresses: IPAddr
  operational_state: String!
  os: String
  os_version: String
  vendor: String
  backup: String
  managed_by: String
  description: String
  responsible_group: String
  support_group: String
  security_class: String
  security_comment: String
}

type IDRelation {
  entity_id: ID
  relation_id: Int
}

"""IPAddr scalar to be matched with the IPAddrField in a django form"""
scalar IPAddr

interface KeyValue {
  name: String!
  value: String!
}

interface Logical {
  name: String!
}

type Mutation {
  create_group(input: CreateGroupInput!): CreateGroupPayload
  update_group(input: UpdateGroupInput!): UpdateGroupPayload
  delete_group(input: DeleteGroupInput!): DeleteGroupPayload
  composite_group(input: CompositeGroupMutationInput!): CompositeGroupMutationPayload
  create_procedure(input: CreateProcedureInput!): CreateProcedurePayload
  update_procedure(input: UpdateProcedureInput!): UpdateProcedurePayload
  delete_procedure(input: DeleteProcedureInput!): DeleteProcedurePayload
  create_phone(input: CreatePhoneInput!): CreatePhonePayload
  update_phone(input: UpdatePhoneInput!): UpdatePhonePayload
  delete_phone(input: DeletePhoneInput!): DeletePhonePayload
  create_email(input: CreateEmailInput!): CreateEmailPayload
  update_email(input: UpdateEmailInput!): UpdateEmailPayload
  delete_email(input: DeleteEmailInput!): DeleteEmailPayload
  create_address(input: CreateAddressInput!): CreateAddressPayload
  update_address(input: UpdateAddressInput!): UpdateAddressPayload
  delete_address(input: DeleteAddressInput!): DeleteAddressPayload
  create_contact(input: CreateContactInput!): CreateContactPayload
  update_contact(input: UpdateContactInput!): UpdateContactPayload
  delete_contact(input: DeleteContactInput!): DeleteContactPayload
  composite_contact(input: CompositeContactMutationInput!): CompositeContactMutationPayload
  create_organization(input: CreateOrganizationInput!): CreateOrganizationPayload
  update_organization(input: UpdateOrganizationInput!): UpdateOrganizationPayload
  delete_organization(input: DeleteOrganizationInput!): DeleteOrganizationPayload
  composite_organization(input: CompositeOrganizationMutationInput!): CompositeOrganizationMutationPayload
  create_role(input: CreateRoleInput!): CreateRolePayload
  update_role(input: UpdateRoleInput!): UpdateRolePayload
  delete_role(input: DeleteRoleInput!): DeleteRolePayload
  create_comment(input: CreateCommentInput!): CreateCommentPayload
  update_comment(input: UpdateCommentInput!): UpdateCommentPayload
  delete_comment(input: DeleteCommentInput!): DeleteCommentPayload
  delete_relationship(input: DeleteRelationshipInput!): DeleteRelationshipPayload
  create_option(input: CreateOptionForDropdownInput!): CreateOptionForDropdownPayload

  """Obtain JSON Web Token mutation"""
  token_auth(input: ObtainJSONWebTokenInput!): ObtainJSONWebTokenPayload
  verify_token(input: VerifyInput!): VerifyPayload
  refresh_token(input: RefreshInput!): RefreshPayload
}

type Neo4jChoice implements KeyValue {
  name: String!
  value: String!
}

"""Generic NodeHandler graphene type"""
type NINodeHandlerType implements Node {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
}

"""Simple NodeType graphene class"""
type NINodeType {
  id: ID!
  type: String!

  """Automatically generated from type. Must be unique."""
  slug: String!

  """Hide from menus"""
  hidden: Boolean!
}

"""This class represents a relationship and its properties"""
type NIRelationType implements Node {
  """The ID of the object."""
  id: ID!
  relation_id: Int!
  type: String!
  start: NINodeHandlerType!
  end: NINodeHandlerType!
  nidata: [DictEntryType]
}

"""An object with an ID"""
interface Node {
  """The ID of the object."""
  id: ID!
}

"""An enumeration."""
enum NodeHandleNodeMetaType {
  """Physical"""
  PHYSICAL

  """Logical"""
  LOGICAL

  """Relation"""
  RELATION

  """Location"""
  LOCATION
}

type NodeHandler implements Node {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  name: String!
}

input ObtainJSONWebTokenInput {
  clientMutationId: String
  username: String!
  password: String!
}

"""Obtain JSON Web Token mutation"""
type ObtainJSONWebTokenPayload {
  token: String
  clientMutationId: String
}

"""The group type is used to group contacts"""
type Organization implements Node & Relation {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  with_same_name: [Relation]
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  description: String
  organization_number: String
  organization_id: String
  incident_management_info: String
  type: ChoiceScalar
  website: String
  addresses: [Address]
  addresses_relations: [IDRelation]
  affiliation_customer: Boolean
  affiliation_end_customer: Boolean
  affiliation_provider: Boolean
  affiliation_partner: Boolean
  affiliation_host_user: Boolean
  affiliation_site_owner: Boolean
  parent_organization: [Organization]
  contacts: [Contact]
  contacts_relations: [IDRelation]
}

type OrganizationConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [OrganizationEdge]!
}

"""A Relay edge containing a `Organization` and its cursor."""
type OrganizationEdge {
  """The item at the end of the edge"""
  node: Organization

  """A cursor for use in pagination"""
  cursor: String!
}

input OrganizationFilter {
  AND: [OrganizationNestedFilter!]
  OR: [OrganizationNestedFilter!]
}

input OrganizationInputField {
  name: String
  description: String
  organization_number: String
  organization_id: String
  incident_management_info: String
  type: ChoiceScalar
  website: String
  addresses: AddressInputField
  affiliation_customer: Boolean
  affiliation_end_customer: Boolean
  affiliation_provider: Boolean
  affiliation_partner: Boolean
  affiliation_host_user: Boolean
  affiliation_site_owner: Boolean
  id: ID
  created: DateTime
  modified: DateTime
  creator: UserInputType
  modifier: UserInputType
}

input OrganizationNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  description: String
  description_not: String
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_in: [String!]
  description_not_in: [String!]
  organization_number: String
  organization_number_not: String
  organization_number_lt: String
  organization_number_lte: String
  organization_number_gt: String
  organization_number_gte: String
  organization_number_contains: String
  organization_number_not_contains: String
  organization_number_starts_with: String
  organization_number_not_starts_with: String
  organization_number_ends_with: String
  organization_number_not_ends_with: String
  organization_number_in: [String!]
  organization_number_not_in: [String!]
  organization_id: String
  organization_id_not: String
  organization_id_lt: String
  organization_id_lte: String
  organization_id_gt: String
  organization_id_gte: String
  organization_id_contains: String
  organization_id_not_contains: String
  organization_id_starts_with: String
  organization_id_not_starts_with: String
  organization_id_ends_with: String
  organization_id_not_ends_with: String
  organization_id_in: [String!]
  organization_id_not_in: [String!]
  incident_management_info: String
  incident_management_info_not: String
  incident_management_info_lt: String
  incident_management_info_lte: String
  incident_management_info_gt: String
  incident_management_info_gte: String
  incident_management_info_contains: String
  incident_management_info_not_contains: String
  incident_management_info_starts_with: String
  incident_management_info_not_starts_with: String
  incident_management_info_ends_with: String
  incident_management_info_not_ends_with: String
  incident_management_info_in: [String!]
  incident_management_info_not_in: [String!]
  type: ChoiceScalar
  type_not: ChoiceScalar
  type_lt: ChoiceScalar
  type_lte: ChoiceScalar
  type_gt: ChoiceScalar
  type_gte: ChoiceScalar
  type_contains: ChoiceScalar
  type_not_contains: ChoiceScalar
  type_starts_with: ChoiceScalar
  type_not_starts_with: ChoiceScalar
  type_ends_with: ChoiceScalar
  type_not_ends_with: ChoiceScalar
  type_in: [ChoiceScalar!]
  type_not_in: [ChoiceScalar!]
  website: String
  website_not: String
  website_lt: String
  website_lte: String
  website_gt: String
  website_gte: String
  website_contains: String
  website_not_contains: String
  website_starts_with: String
  website_not_starts_with: String
  website_ends_with: String
  website_not_ends_with: String
  website_in: [String!]
  website_not_in: [String!]
  addresses: AddressInputField
  addresses_not: AddressInputField
  addresses_lt: AddressInputField
  addresses_lte: AddressInputField
  addresses_gt: AddressInputField
  addresses_gte: AddressInputField
  addresses_contains: AddressInputField
  addresses_not_contains: AddressInputField
  addresses_starts_with: AddressInputField
  addresses_not_starts_with: AddressInputField
  addresses_ends_with: AddressInputField
  addresses_not_ends_with: AddressInputField
  addresses_in: [AddressInputField!]
  addresses_not_in: [AddressInputField!]
  affiliation_customer: Boolean
  affiliation_customer_not: Boolean
  affiliation_customer_lt: Boolean
  affiliation_customer_lte: Boolean
  affiliation_customer_gt: Boolean
  affiliation_customer_gte: Boolean
  affiliation_customer_in: [Boolean!]
  affiliation_customer_not_in: [Boolean!]
  affiliation_end_customer: Boolean
  affiliation_end_customer_not: Boolean
  affiliation_end_customer_lt: Boolean
  affiliation_end_customer_lte: Boolean
  affiliation_end_customer_gt: Boolean
  affiliation_end_customer_gte: Boolean
  affiliation_end_customer_in: [Boolean!]
  affiliation_end_customer_not_in: [Boolean!]
  affiliation_provider: Boolean
  affiliation_provider_not: Boolean
  affiliation_provider_lt: Boolean
  affiliation_provider_lte: Boolean
  affiliation_provider_gt: Boolean
  affiliation_provider_gte: Boolean
  affiliation_provider_in: [Boolean!]
  affiliation_provider_not_in: [Boolean!]
  affiliation_partner: Boolean
  affiliation_partner_not: Boolean
  affiliation_partner_lt: Boolean
  affiliation_partner_lte: Boolean
  affiliation_partner_gt: Boolean
  affiliation_partner_gte: Boolean
  affiliation_partner_in: [Boolean!]
  affiliation_partner_not_in: [Boolean!]
  affiliation_host_user: Boolean
  affiliation_host_user_not: Boolean
  affiliation_host_user_lt: Boolean
  affiliation_host_user_lte: Boolean
  affiliation_host_user_gt: Boolean
  affiliation_host_user_gte: Boolean
  affiliation_host_user_in: [Boolean!]
  affiliation_host_user_not_in: [Boolean!]
  affiliation_site_owner: Boolean
  affiliation_site_owner_not: Boolean
  affiliation_site_owner_lt: Boolean
  affiliation_site_owner_lte: Boolean
  affiliation_site_owner_gt: Boolean
  affiliation_site_owner_gte: Boolean
  affiliation_site_owner_in: [Boolean!]
  affiliation_site_owner_not_in: [Boolean!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum OrganizationOrderBy {
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  organization_number_ASC
  organization_number_DESC
  organization_id_ASC
  organization_id_DESC
  incident_management_info_ASC
  incident_management_info_DESC
  type_ASC
  type_DESC
  website_ASC
  website_DESC
  addresses_ASC
  addresses_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""Phone entity to be used inside contact"""
type Phone implements Node & Logical {
  handle_id: ID!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  type: ChoiceScalar!
}

type PhoneConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [PhoneEdge]!
}

"""A Relay edge containing a `Phone` and its cursor."""
type PhoneEdge {
  """The item at the end of the edge"""
  node: Phone

  """A cursor for use in pagination"""
  cursor: String!
}

input PhoneFilter {
  AND: [PhoneNestedFilter!]
  OR: [PhoneNestedFilter!]
}

input PhoneInputField {
  name: String
  type: ChoiceScalar
  id: ID
  created: DateTime
  modified: DateTime
  creator: UserInputType
  modifier: UserInputType
}

input PhoneNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  type: ChoiceScalar
  type_not: ChoiceScalar
  type_lt: ChoiceScalar
  type_lte: ChoiceScalar
  type_gt: ChoiceScalar
  type_gte: ChoiceScalar
  type_contains: ChoiceScalar
  type_not_contains: ChoiceScalar
  type_starts_with: ChoiceScalar
  type_not_starts_with: ChoiceScalar
  type_ends_with: ChoiceScalar
  type_not_ends_with: ChoiceScalar
  type_in: [ChoiceScalar!]
  type_not_in: [ChoiceScalar!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum PhoneOrderBy {
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

interface Physical {
  name: String!
}

type Port implements Node & Physical {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  port_type: ChoiceScalar
  description: String
  parent: Physical
  connected_to: [NodeHandler]
}

"""The group type is used to group contacts"""
type Procedure implements Node & Logical {
  handle_id: ID!
  node_name: String!
  node_type: NINodeType!
  node_meta_type: NodeHandleNodeMetaType!
  creator: User!
  created: DateTime!
  modifier: User!
  modified: DateTime!

  """The ID of the object."""
  id: ID!
  name: String!
  nidata: [DictEntryType]
  incoming: [DictRelationType]
  outgoing: [DictRelationType]
  comments: [CommentType]
  description: String
}

type ProcedureConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ProcedureEdge]!
}

"""A Relay edge containing a `Procedure` and its cursor."""
type ProcedureEdge {
  """The item at the end of the edge"""
  node: Procedure

  """A cursor for use in pagination"""
  cursor: String!
}

input ProcedureFilter {
  AND: [ProcedureNestedFilter!]
  OR: [ProcedureNestedFilter!]
}

input ProcedureNestedFilter {
  name: String
  name_not: String
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_in: [String!]
  name_not_in: [String!]
  description: String
  description_not: String
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_in: [String!]
  description_not_in: [String!]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  created: DateTime
  created_not: DateTime
  created_lt: DateTime
  created_lte: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_in: [DateTime!]
  created_not_in: [DateTime!]
  modified: DateTime
  modified_not: DateTime
  modified_lt: DateTime
  modified_lte: DateTime
  modified_gt: DateTime
  modified_gte: DateTime
  modified_in: [DateTime!]
  modified_not_in: [DateTime!]
  creator: UserInputType
  creator_not: UserInputType
  creator_lt: UserInputType
  creator_lte: UserInputType
  creator_gt: UserInputType
  creator_gte: UserInputType
  creator_contains: UserInputType
  creator_not_contains: UserInputType
  creator_starts_with: UserInputType
  creator_not_starts_with: UserInputType
  creator_ends_with: UserInputType
  creator_not_ends_with: UserInputType
  creator_in: [UserInputType!]
  creator_not_in: [UserInputType!]
  modifier: UserInputType
  modifier_not: UserInputType
  modifier_lt: UserInputType
  modifier_lte: UserInputType
  modifier_gt: UserInputType
  modifier_gte: UserInputType
  modifier_contains: UserInputType
  modifier_not_contains: UserInputType
  modifier_starts_with: UserInputType
  modifier_not_starts_with: UserInputType
  modifier_ends_with: UserInputType
  modifier_not_ends_with: UserInputType
  modifier_in: [UserInputType!]
  modifier_not_in: [UserInputType!]
}

"""An enumeration."""
enum ProcedureOrderBy {
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  created_ASC
  created_DESC
  modified_ASC
  modified_DESC
  handle_id_ASC
  handle_id_DESC
}

type Query {
  getAvailableDropdowns: [String]
  getChoicesForDropdown(name: String!): [Choice]
  roles(filter: RoleFilter, orderBy: RoleOrderBy, before: String, after: String, first: Int, last: Int): RoleConnection
  checkExistentOrganizationId(organization_id: String!, id: ID): Boolean
  getAvailableRoleGroups: [RoleGroup]
  getRolesFromRoleGroup(name: String): [Role]
  all_groups: [Group]
  count_groups: Int
  groups(filter: GroupFilter, orderBy: GroupOrderBy, before: String, after: String, first: Int, last: Int): GroupConnection
  getGroupById(id: ID): Group
  all_addresss: [Address]
  count_addresss: Int
  addresss(filter: AddressFilter, orderBy: AddressOrderBy, before: String, after: String, first: Int, last: Int): AddressConnection
  getAddressById(id: ID): Address
  all_phones: [Phone]
  count_phones: Int
  phones(filter: PhoneFilter, orderBy: PhoneOrderBy, before: String, after: String, first: Int, last: Int): PhoneConnection
  getPhoneById(id: ID): Phone
  all_emails: [Email]
  count_emails: Int
  emails(filter: EmailFilter, orderBy: EmailOrderBy, before: String, after: String, first: Int, last: Int): EmailConnection
  getEmailById(id: ID): Email
  all_contacts: [Contact]
  count_contacts: Int
  contacts(filter: ContactFilter, orderBy: ContactOrderBy, before: String, after: String, first: Int, last: Int): ContactConnection
  getContactById(id: ID): Contact
  all_organizations: [Organization]
  count_organizations: Int
  organizations(filter: OrganizationFilter, orderBy: OrganizationOrderBy, before: String, after: String, first: Int, last: Int): OrganizationConnection
  getOrganizationById(id: ID): Organization
  all_procedures: [Procedure]
  count_procedures: Int
  procedures(filter: ProcedureFilter, orderBy: ProcedureOrderBy, before: String, after: String, first: Int, last: Int): ProcedureConnection
  getProcedureById(id: ID): Procedure
  all_customers: [Customer]
  count_customers: Int
  customers(filter: CustomerFilter, orderBy: CustomerOrderBy, before: String, after: String, first: Int, last: Int): CustomerConnection
  getCustomerById(id: ID): Customer
}

input RefreshInput {
  token: String!
  clientMutationId: String
}

type RefreshPayload {
  token: String
  payload: GenericScalar
  clientMutationId: String
}

interface Relation {
  name: String!
  with_same_name: [Relation]
}

"""This class represents a Role in the relational db"""
type Role implements Node {
  handle_id: ID!
  name: String!
  slug: String!
  description: String
  role_group: RoleGroup

  """The ID of the object."""
  id: ID!
}

type RoleConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [RoleEdge]!
}

"""A Relay edge containing a `Role` and its cursor."""
type RoleEdge {
  """The item at the end of the edge"""
  node: Role

  """A cursor for use in pagination"""
  cursor: String!
}

input RoleFilter {
  name: String
  id: ID
}

"""This class represents a Role in the relational db"""
type RoleGroup {
  id: ID!
  name: String!
  hidden: Boolean!
  role_set: [Role!]!
}

enum RoleOrderBy {
  name_ASC
  name_DESC
  handle_id_ASC
  handle_id_DESC
}

type RoleRelation {
  relation_id: Int!
  type: String!
  start: Contact
  end: Organization
  nidata: [DictEntryType]
  name: String
  role_data: Role
}

input RoleRelationInputField {
  relation_id: Int
  name: String
}

input RoleRelationMutationInput {
  role_id: ID
  organization_id: ID!
  relation_id: Int
  clientMutationId: String
}

type RoleRelationMutationPayload {
  errors: [ErrorType]
  rolerelation: RoleRelation
  clientMutationId: String
}

input UpdateAddressInput {
  organization: ChoiceScalar
  name: String!
  phone: String
  street: String
  postal_code: String
  postal_area: String
  id: ID!
  clientMutationId: String
}

type UpdateAddressPayload {
  errors: [ErrorType]
  address: Address
  clientMutationId: String
}

input UpdateCommentInput {
  id: ID!
  comment: String!
  clientMutationId: String
}

type UpdateCommentPayload {
  comment: CommentType
  clientMutationId: String
}

input UpdateContactInput {
  first_name: String!
  last_name: String!
  contact_type: ChoiceScalar!
  name: String
  title: String
  pgp_fingerprint: String
  notes: String
  relationship_works_for: ChoiceScalar
  relationship_member_of: ChoiceScalar
  role: ChoiceScalar
  email_id: String
  email: String
  email_type: ChoiceScalar
  phone_id: String
  phone: String
  phone_type: ChoiceScalar
  role_id: String
  id: ID!
  clientMutationId: String
}

type UpdateContactPayload {
  errors: [ErrorType]
  contact: Contact
  clientMutationId: String
}

input UpdateEmailInput {
  contact: ChoiceScalar
  name: String!
  type: ChoiceScalar!
  id: ID!
  clientMutationId: String
}

type UpdateEmailPayload {
  errors: [ErrorType]
  email: Email
  clientMutationId: String
}

input UpdateGroupInput {
  name: String!
  description: String
  relationship_member_of: ChoiceScalar
  id: ID!
  clientMutationId: String
}

type UpdateGroupPayload {
  errors: [ErrorType]
  group: Group
  clientMutationId: String
}

input UpdateOrganizationInput {
  organization_number: String
  name: String!
  description: String
  website: String
  organization_id: String
  type: ChoiceScalar
  incident_management_info: String
  affiliation_customer: Boolean
  affiliation_end_customer: Boolean
  affiliation_provider: Boolean
  affiliation_partner: Boolean
  affiliation_host_user: Boolean
  affiliation_site_owner: Boolean
  relationship_parent_of: ChoiceScalar
  relationship_uses_a: ChoiceScalar
  abuse_contact: ChoiceScalar
  primary_contact: ChoiceScalar
  secondary_contact: ChoiceScalar
  it_technical_contact: ChoiceScalar
  it_security_contact: ChoiceScalar
  it_manager_contact: ChoiceScalar
  id: ID!
  clientMutationId: String
}

type UpdateOrganizationPayload {
  errors: [ErrorType]
  organization: Organization
  clientMutationId: String
}

input UpdatePhoneInput {
  contact: ChoiceScalar
  name: String!
  type: ChoiceScalar!
  id: ID!
  clientMutationId: String
}

type UpdatePhonePayload {
  errors: [ErrorType]
  phone: Phone
  clientMutationId: String
}

input UpdateProcedureInput {
  name: String!
  description: String
  id: ID!
  clientMutationId: String
}

type UpdateProcedurePayload {
  errors: [ErrorType]
  procedure: Procedure
  clientMutationId: String
}

input UpdateRoleInput {
  id: ID
  name: String!
  description: String
  clientMutationId: String
}

type UpdateRolePayload {
  role: Role
  errors: [ErrorType]
  clientMutationId: String
}

"""The django user type"""
type User {
  id: ID!

  """Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."""
  username: String!
  first_name: String!
  last_name: String!
  email: String!
}

"""This object represents an input for an user used in connections"""
input UserInputType {
  username: String!
}

input VerifyInput {
  token: String!
  clientMutationId: String
}

type VerifyPayload {
  payload: GenericScalar
  clientMutationId: String
}
